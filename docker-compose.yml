version: '3.8'

services:
  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"

  redis:
    image: redis:latest
    restart: always
    command: redis-server --requirepass myredispassword
    ports:
      - "6379:6379"

  kafka:
    image: docker.io/bitnami/kafka:3.5
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

  migration:
    image: migrate/migrate:latest
    volumes:
      - ./server/internal/migration:/migrations
    command: [ "-path", "/migrations", "-database", "postgres://myuser:pass@postgres:5432/postgres?sslmode=disable", "up" ]
    restart: always
    depends_on:
      - postgres

  backend:
    build: ./server
    restart: always
    depends_on:
      - postgres
      - redis
      - kafka
      - migration

    env_file:
      - ./server/.env
    environment:
      STAGE_STATUS: development
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 8080
      SERVER_READ_TIMEOUT: 10
      JWT_SECRET_KEY: mysecretkey
      JWT_SECRET_KEY_EXPIRE_TIME: 12
      JWT_REFRESH_KEY: myrefreshkey
      JWT_REFRESH_KEY_EXPIRE_HOURS_COUNT: 24
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: myuser
      DB_PASSWORD: pass
      DB_NAME: postgres
      DB_SSL_MODE: disable
      DB_MAX_CONNECTIONS: 100
      DB_MAX_IDLE_CONNECTIONS: 10
      DB_MAX_LIFETIME_CONNECTIONS: 30
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: myredispassword
      REDIS_DB_NUMBER: 0
      MSG_CHANNEL_TYPE: kafka
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
      KAFKA_MESSAGE_TOPIC: messages
      KAFKA_NOTIFICATION_TOPIC: notifications
      LOG_LEVEL: DEBUG
    ports:
      - "8080:8080"

volumes:
  kafka_data:
    driver: local
  # frontend:
  #   build: ./client
  #   restart: always
  #   depends_on:
  #     - backend
  #   env_file:
  #     - ./client/.env.local
  #   environment:
  #     BASE_URL: http://backend:8080
  #   ports:
  #     - "3000:3000"